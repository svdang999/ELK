# Create/Update index lifecycle policy (rollover)
PUT _ilm/policy/camunda_policy
{
  "policy": {
    "phases": {
      "hot": {
        "actions": {
          "rollover": {
            "max_primary_shard_size": "3GB",
            "max_age": "30d"
          }
        }
      },
      "delete": {
        "min_age": "45d",
        "actions": {
          "delete": {} 
        }
      }
    }
  }
}


# Create/Update index lifecycle policy (apply immediately)
# https://stackoverflow.com/questions/59859306/elasticsearch-ilm-not-deleting-indices
PUT _ilm/policy/camunda_policy
{
  "policy": {
    "phases": {
      "hot": {
        "actions": {
          "set_priority": {
            "priority": 100
          }
        }
      },
      "delete": {
        "min_age": "30d",
        "actions": {
          "delete": {} 
        }
      }
    }
  }
}

# Apply policy to multiple indexes
PUT operate-event*/_settings 
{
  "index": {
    "lifecycle": {
      "name": "camunda_policy"
    }
  }
}



# Create index template
PUT _index_template/aurora-camunda-log
{
  "index_patterns": ["aurora-camunda-log*"],                 
  "template": {
    "settings": {
      "number_of_shards": 1,
      "number_of_replicas": 1,
      "index.lifecycle.name": "camunda_policy",      
      "index.lifecycle.rollover_alias": "aurora-camunda-log"    
    }
  }
}

# Bootstrap initial index to template
PUT aurora-camunda-log-000001
{
  "aliases": {
    "aurora-camunda-log": {
      "is_write_index": true
    }
  }
}



# List policy details
GET _ilm/policy/camunda_policy

# Checking current phase of the Index
GET index_name/_ilm/explain

# Increase max shards limit per node
PUT /_cluster/settings
{
  "persistent" : {
      "cluster.max_shards_per_node": "3000"
  }
}

